<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup Label="Main">
        <AssemblyName>CodeChops.DomainModeling</AssemblyName>
        <RootNamespace>CodeChops.DomainModeling</RootNamespace>
        <TargetFramework>net7.0</TargetFramework>
        <LangVersion>11</LangVersion>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <PropertyGroup Label="Package">
        <Version>2.3.5</Version>
        <PackageReleaseNotes>Added value object usings for subtypes.</PackageReleaseNotes>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Title>CodeChops.DomainModeling</Title>
        <Description>Easy domain modeling in accordance with the principles of Domain Driven Design.</Description>
        <PackageId>CodeChops.DomainModeling</PackageId>
        <PackageProjectUrl>https://github.com/code-chops/DomainDrivenDesign.DomainModeling</PackageProjectUrl>
        <PackageTags>CodeChops;CodeChops.DomainModeling;DomainDrivenDesign;DomainModeling</PackageTags>
        <RepositoryUrl>https://github.com/code-chops/DomainDrivenDesign.DomainModeling</RepositoryUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <Authors>CodeChops (@Code-Chops), Max Bergman</Authors>
        <Company>CodeChops</Company>
        <RepositoryType>Git</RepositoryType>
        <PackageIcon>icon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <Copyright>Copyright (c) CodeChops $([System.DateTime]::Now.ToString(yyyy))</Copyright>
        <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
		<PackageReadmeFile>README.md</PackageReadmeFile>
        <NoWarn>
            CS1591, <!-- Missing XML comment for publicly visible type or member -->
            CS1573, <!-- Parameter has no matching param tag in the XML comment -->
            CS1712, <!-- Type parameter has no matching typeparam tag in the XML comment (but other type parameters do) -->
        </NoWarn>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <DebugType>none</DebugType>
    </PropertyGroup>
    
    <!-- Creates local nuget packages if in release mode and environment variable LocalNuGetPackagesFolder is configured -->
    <Target Name="AddNugetPackage" AfterTargets="Pack" Condition="'$(Configuration)' == 'Release' AND '$(LocalNuGetPackagesFolder)' != null">
        <Exec Command="$(LocalNuGetPackagesFolder)\nuget.exe add $(OutputPath)..\$(PackageId).$(PackageVersion).nupkg -source $(LocalNuGetPackagesFolder)" />
    </Target>

    <ItemGroup Label="PackageAssets">
		<None Include="..\LICENSE" Pack="true" PackagePath="" />
		<None Include="..\icon.png" Pack="true" Visible="true" PackagePath="" />
		<None Include="..\README.md" Pack="true" PackagePath="\" />
    </ItemGroup>

    <ItemGroup Label="InternalsVisibleTo">
        <InternalsVisibleTo Include="$(AssemblyName).UnitTests" />
        <InternalsVisibleTo Include="$(AssemblyName).IntegrationTests" />
    </ItemGroup>

    <ItemGroup Label="ProjectReferences">
        <ProjectReference Include="..\DomainModeling.SourceGeneration\DomainModeling.SourceGeneration.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
        <!-- Package the generator in the analyzer directory of the nuget package -->
        <None Include="..\DomainModeling.SourceGeneration\bin\$(Configuration)\netstandard2.0\*.dll" Pack="true" PackagePath="analyzers\dotnet\cs" Visible="false" />
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="7.0.0" />
    </ItemGroup>

</Project>
